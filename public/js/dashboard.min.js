"use strict";

angular.module("RDash", [
    "ui.bootstrap",
    "ui.router",
    "ngCookies",
    "ngTouch",
    "ui.grid",
    "ui.grid.moveColumns"
]);

angular.module("RDash")

        .config(["$stateProvider", "$urlRouterProvider", function (t, e) {
                e.otherwise("/"), t.state("index", {url: "/", templateUrl: "templates/dashboard.html"})

                        .state("pesquisa", {url: "/pesquisa", templateUrl: "templates/pesquisa.html"})
                        .state("reserva", {url: "/reserva", templateUrl: "templates/reserva.html"})
                        .state("livro", {url: "/livro", templateUrl: "templates/livro.html", controller: 'LivroCtrl'})
                        .state("user", {url: "/user", templateUrl: "templates/user.html", controller: 'UserCtrl'})

            }]);


angular.module("RDash").controller('LivroCtrl', ['$http', '$scope', '$filter',
    function ($http, $scope, $filter) {

        $scope.refresh = function () {
            $http.get('/livro').success(function (response) {
                console.log("refresh livros");
                $scope.livros = response;
                $scope.livro = {};
                $scope.btnAdicionar = 'Adicionar';
            });
        };
        $scope.refresh();

        $scope.addLivro = function () {
            console.log('Insert');
            $http.post('/livro', $scope.livro).success(function (response) {
                console.log(response);
                $scope.refresh();
            });
        }

        $scope.mergeLivro = function () {
            if ($scope.livro._id === undefined) {
                $scope.addLivro();
            }
            else
            {
                $scope.update();
            }
        };


        $scope.remove = function (id) {
            console.log('remove livro:' + id.toString());
            $http.delete('/livro/' + id).success(function (response) {
                $scope.refresh();
            });
        };

        $scope.edit = function (id) {
            console.log('editando livro:' + id.toString());
            $http.get('/livro/' + id).success(function (response) {
                $scope.livro = response;
                $scope.btnAdicionar = 'Atualizar';
            });
        };

        $scope.update = function () {
            console.log('update livro:' + $scope.livro._id.toString());
            $http.put('/livro/' + $scope.livro._id, $scope.livro).success(function (response) {
                $scope.refresh();
            })
        };

        $scope.deselect = function () {
            $scope.livro = "";
            $scope.btnAdicionar = 'Adicionar';
        }


    }]);




angular.module("RDash").controller('UserCtrl', ['$http', '$scope', '$filter',
    function ($http, $scope, $filter) {

        $scope.gridOptions = {
            enableColumnMenu: false,
            columnDefs: [
                {field: 'nome', enableColumnMenu: false, title: '123123'},
                {field: 'senha', enableColumnMenu: false},
            ]
        };

        $scope.gridOptions.columnDefs = [
            {name: '_id'},
            {name: 'nome'},
            {name: 'senha'},
        ];

        $scope.refresh = function () {
            $http.get('/user').success(function (response) {
                console.log("refresh user");
                $scope.gridOptions.data = response;
                //$scope.users = response;
                $scope.user = {};
                $scope.btnAdicionar = 'Adicionar';
            });
        };
        $scope.refresh();

        $scope.addUser = function () {
            console.log('Insert');
            $http.post('/user', $scope.user).success(function (response) {
                console.log(response);
                $scope.refresh();
            });
        }

        $scope.mergeUser = function () {
            if ($scope.user._id === undefined) {
                $scope.addUser();
            }
            else
            {
                $scope.update();
            }
        };


        $scope.remove = function (id) {
            console.log('remove user:' + _id.toString());
            $http.delete('/user/' + id).success(function (response) {
                $scope.refresh();
            });
        };

        $scope.edit = function (id) {
            console.log('editando user:' + _id.toString());
            $http.get('/user/' + id).success(function (response) {
                $scope.user = response;
                $scope.btnAdicionar = 'Atualizar';
            });
        };

        $scope.update = function () {
            console.log('update user:' + $scope.user._id.toString());
            $http.put('/user/' + $scope.user._id, $scope.user).success(function (response) {
                $scope.refresh();
            })
        };

        $scope.deselect = function () {
            $scope.user = "";
            $scope.btnAdicionar = 'Adicionar';
        }


    }]);


function rdLoading() {
    var d = {restrict: "AE", template: '<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'};
    return d
}

angular.module("RDash").directive("rdLoading", rdLoading);
function rdWidgetBody() {
    var d = {requires: "^rdWidget", scope: {loading: "@?", classes: "@?"}, transclude: !0, template: '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>', restrict: "E"};
    return d
}

angular.module("RDash").directive("rdWidgetBody", rdWidgetBody);
function rdWidgetFooter() {
    var e = {requires: "^rdWidget", transclude: !0, template: '<div class="widget-footer" ng-transclude></div>', restrict: "E"};
    return e
}

angular.module("RDash").directive("rdWidgetFooter", rdWidgetFooter);
function rdWidgetTitle() {
    var i = {requires: "^rdWidget", scope: {title: "@", icon: "@"}, transclude: !0, template: '<div class="widget-header"><div class="row"><div class="pull-left"><i class="fa" ng-class="icon"></i> {{title}} </div><div class="pull-right col-xs-6 col-sm-4" ng-transclude></div></div></div>', restrict: "E"};
    return i
}

angular.module("RDash").directive("rdWidgetHeader", rdWidgetTitle);
function rdWidget() {
    var d = {transclude: !0, template: '<div class="widget" ng-transclude></div>', restrict: "EA"};
    return d
}

angular.module("RDash").directive("rdWidget", rdWidget);
function AlertsCtrl(e) {
    e.alerts = [{type: "success", msg: "Thanks for visiting! Feel free to create pull requests to improve the dashboard!"}, {type: "danger", msg: "Found a bug? Create an issue with as many details as you can."}], e.addAlert = function () {
        e.alerts.push({msg: "Another alert!"})
    }, e.closeAlert = function (t) {
        e.alerts.splice(t, 1)
    }
}

angular.module("RDash").controller("AlertsCtrl", ["$scope", AlertsCtrl]);
function MasterCtrl(t, e) {
    var o = 992;
    t.getWidth = function () {
        return window.innerWidth
    }, t.$watch(t.getWidth, function (g, n) {
        t.toggle = g >= o ? angular.isDefined(e.get("toggle")) ? e.get("toggle") ? !0 : !1 : !0 : !1
    }), t.toggleSidebar = function () {
        t.toggle = !t.toggle, e.put("toggle", t.toggle)
    }, window.onresize = function () {
        t.$apply()
    }
}

angular.module("RDash").controller("MasterCtrl", ["$scope", "$cookieStore", MasterCtrl]);
